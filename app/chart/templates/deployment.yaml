apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "echoupstream.fullname" . }}
  labels:
    {{- include "echoupstream.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "echoupstream.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "echoupstream.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "echoupstream.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.application.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /liveness
              port: http
          readinessProbe:
            httpGet:
              path: /readiness
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: CONFIG_PATH
              # if i put 'app/config' instead of 'etc/config' it gives error when deployed on kubernetes
              # cause the Rust application use 'app' as root directory and so it expects a 'config' directory 
              # inside that is not present in the project 
              value: /etc/config 
          {{- range  .Values.envFromSecret }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secret }}
                  key: {{ .key }}
          {{- end }}
          {{- range $key, $value := .Values.env }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
          {{- end }}
          volumeMounts:
            - name: echoupstream-configuration
              # if i put 'app/config' instead of 'etc/config' it gives error when deployed on kubernetes
              # cause the Rust application use 'app' as root directory and so it expects a 'config' directory 
              # inside that is not present in the project 
              mountPath: /etc/config 
              readOnly: true
      volumes:
        - name: echoupstream-configuration
          configMap:
            name: {{ include "echoupstream.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
